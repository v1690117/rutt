version: '3.1'

services:
  proxy:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/build:/static

  # tests-service and dependencies
  tests-service:
    image: tests-service
    command:
      - "java"
      - "-jar"
      - "-Dserver.port=7080"
      - "-Dparams.postgres.host=tests-db"
      - "app.jar"
  tests-db:
    image: postgres:15.2
    volumes:
      - ./.local/tests-db/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "data"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "0"

  # files-service and dependencies
  files-service:
    image: files-service
    command:
      - "java"
      - "-jar"
      - "-Dparams.mongo.host=mongodb"
      - "-Dparams.s3.host=minio"
      - "-Dserver.port=7081"
      - "app.jar"
  mongodb:
    image: mongo:latest
    env_file:
      - ./.local/variables.env
    volumes:
      - ./.local/mongodb-data:/data/db
      - ./conf/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  minio:
    image: bitnami/minio
    env_file:
      - ./.local/variables.env
    ports:
      - 9001:9001
    volumes:
      - ./.local/minio-data:/data
      - ./.local/minio-init.sh:/docker-entrypoint-init.d/minio-init.sh

#  neo4j:
#    image: neo4j:latest
#    restart: always
#    volumes:
#      - ~/rutt/requirements/data:/data
#      - ~/rutt/requirements/logs:/logs
#      - ~/rutt/requirements/import:/var/lib/neo4j/import
#      - ~/rutt/requirements/plugins:/plugins
#    environment:
#      - NEO4J_AUTH=neo4j/0
#    ports:
#      - "7474:7474"
#      - "7687:7687"
#  identity-db:
#    image: postgres:latest
#    restart: always
#    volumes:
#      - .personal/tests-db/data:/var/lib/postgresql/data
#    environment:
#      POSTGRES_DB: "data"
#      POSTGRES_USER: "postgres"
#      POSTGRES_PASSWORD: "0"
#    ports:
#      - "5433:5432"
